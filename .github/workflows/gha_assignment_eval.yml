name: GHA Assignment Evaluation

on:
  pull_request:
    branches:
      - 'main'
    paths:
      - '.github/workflows/ASSIGNMENT_2.yml'

jobs:
   gha-test:
    runs-on: ubuntu-latest
    container:
      image: maniator/gh
    permissions:
      actions: read
      contents: read
      pull-requests: write

    steps:
      # Step 1: Checkout the files here.
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Run the thing 
        run: |
           git config --global --add safe.directory $GITHUB_WORKSPACE
           gh workflow run .github/workflows/ASSIGNMENT_2.yml --ref ${{ github.head_ref }}
        env:
          GH_TOKEN: ${{ github.token }}
          
      - name: Check for recent successful runs
        id: check-results
        if: steps.validate-workflow.outputs.workflow_exists == 'true' && steps.validate-workflow.outputs.workflow_valid == 'true'
        run: |
          WORKFLOW_STATUS="none"
          RECENT_SUCCESS=false
          
          # Get the workflow ID first
          WORKFLOW_INFO=$(gh api repos/${{ github.repository }}/actions/workflows 2>/dev/null | jq -r '.workflows[] | select(.path == ".github/workflows/ASSIGNMENT_2.yml") | .id' | head -1)
          
          if [ ! -z "$WORKFLOW_INFO" ] && [ "$WORKFLOW_INFO" != "null" ]; then
            echo "Found workflow with ID: $WORKFLOW_INFO"
            
            # Check for recent runs (last 24 hours)
            RECENT_RUNS=$(gh api repos/${{ github.repository }}/actions/workflows/$WORKFLOW_INFO/runs --jq '.workflow_runs[] | select(.created_at > "'$(date -d '1 day ago' -Iso8601)'") | {id: .id, status: .status, conclusion: .conclusion, created_at: .created_at}' 2>/dev/null || echo "[]")
            
            if [ "$RECENT_RUNS" != "[]" ] && [ ! -z "$RECENT_RUNS" ]; then
              echo "Found recent workflow runs:"
              echo "$RECENT_RUNS"
              
              # Check if any recent run was successful
              SUCCESS_COUNT=$(echo "$RECENT_RUNS" | jq -r 'select(.conclusion == "success") | .id' | wc -l)
              
              if [ "$SUCCESS_COUNT" -gt 0 ]; then
                WORKFLOW_STATUS="success"
                RECENT_SUCCESS=true
                echo "‚úÖ Found successful workflow run"
              else
                # Check if there are any completed runs (success, failure, cancelled)
                COMPLETED_RUNS=$(echo "$RECENT_RUNS" | jq -r 'select(.conclusion != null and .conclusion != "") | .conclusion' | head -1)
                if [ ! -z "$COMPLETED_RUNS" ]; then
                  WORKFLOW_STATUS="$COMPLETED_RUNS"
                  echo "Found completed run with status: $WORKFLOW_STATUS"
                else
                  WORKFLOW_STATUS="running"
                  echo "Workflow appears to be running or queued"
                fi
              fi
            else
              echo "No recent workflow runs found"
              WORKFLOW_STATUS="no_runs"
            fi
          else
            echo "Could not find workflow in repository"
            WORKFLOW_STATUS="not_found"
          fi
          
          echo "workflow_status=$WORKFLOW_STATUS" >> $GITHUB_OUTPUT
          echo "recent_success=$RECENT_SUCCESS" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ github.token }}
    
      - name: Install uv
        if: steps.check-results.outputs.workflow_status == 'success'
        uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        if: steps.check-results.outputs.workflow_status == 'success'
        run: | 
          uv pip install --system requests uuid

      - name: Generate secret code
        id: generate-code
        if: steps.check-results.outputs.workflow_status == 'success'
        run: |
          SECRET_CODE=$(python .github/workflows/scripts/generate_secret_code.py)
          echo "Generated Secret Code: $SECRET_CODE"
          echo "secret_code=$SECRET_CODE" >> $GITHUB_OUTPUT
        shell: bash

      # --- Comment on Pull Request (SUCCESS case) ---
      - name: Comment secret code on PR
        if: steps.check-results.outputs.workflow_status == 'success'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            üéâ **GitHub Action Successful!** üéâ

            Great job! Your GitHub Action ran successfully.

            Please copy the following secret code and provide it to your Coursera course to prove completion:

            ```
            ${{ steps.generate-code.outputs.secret_code }}
            ```

            Keep up the excellent work!
          comment-id: docker-build-secret-code
          update-existing: true

      # --- Comment on Pull Request (FAILURE case) ---
      - name: Comment on PR (Failure)
        # Fixed: Reference the correct step and output
        if: steps.check-results.outputs.workflow_status != 'success' && steps.check-location.outputs.correct_location == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ‚ö†Ô∏è **Learner Action Test Failed!** ‚ö†Ô∏è

            It looks like your GitHub Action test did not complete successfully.

            Please **review the Action logs for this workflow run** to identify and fix the issue. You can access the logs by clicking on the "Details" next to your failed test.

            Once you've resolved the problem, push your changes to this pull request, and the workflow will automatically re-run.

            Keep trying! You'll get it!
          comment-id: learner-action-secret-code-failure
          update-existing: true
