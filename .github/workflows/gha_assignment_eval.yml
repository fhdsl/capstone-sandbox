name: GHA Assignment Evaluation

on:
  pull_request:
    branches:
      - 'main'
    paths:
      - '.github/workflows/ASSIGNMENT_2.yml'

jobs:
   gha-test:
    runs-on: ubuntu-latest
    container:
      image: maniator/gh
    permissions:
      actions: read
      contents: read
      pull-requests: write

    steps:
      # Step 1: Checkout the files here.
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Check for recent successful runs
        id: check-results
        if: steps.validate-workflow.outputs.workflow_exists == 'true' && steps.validate-workflow.outputs.workflow_valid == 'true'
        run: |
          WORKFLOW_STATUS="none"
          RECENT_SUCCESS=false
          
          # Look for workflow files that might match
          WORKFLOW_FILE=".github/workflows/ASSIGNMENT_2.yml"
          
          echo "Checking for workflow at: $WORKFLOW_FILE"
          
          # Try to find the workflow using GitHub API
          WORKFLOW_INFO=$(gh api repos/${{ github.repository }}/actions/workflows 2>/dev/null | jq -r --arg path "$WORKFLOW_FILE" '.workflows[] | select(.path == $path) | .id' | head -1)
          
          if [ ! -z "$WORKFLOW_INFO" ] && [ "$WORKFLOW_INFO" != "null" ] && [ "$WORKFLOW_INFO" != "" ]; then
            echo "Found workflow with ID: $WORKFLOW_INFO"
            
            # Check for recent runs (last 7 days to be more forgiving)
            echo "Checking for recent workflow runs..."
            RECENT_RUNS=$(gh api "repos/${{ github.repository }}/actions/workflows/$WORKFLOW_INFO/runs?per_page=10" 2>/dev/null | jq -r '.workflow_runs[] | select(.created_at > "'$(date -d '7 days ago' -Iso8601)'") | {id: .id, status: .status, conclusion: .conclusion, created_at: .created_at, head_branch: .head_branch}')
            
            if [ ! -z "$RECENT_RUNS" ] && [ "$RECENT_RUNS" != "" ]; then
              echo "Found recent workflow runs:"
              echo "$RECENT_RUNS" | jq -c '.'
              
              # Check if any recent run was successful
              SUCCESS_COUNT=$(echo "$RECENT_RUNS" | jq -r 'select(.conclusion == "success") | .id' | wc -l)
              
              if [ "$SUCCESS_COUNT" -gt 0 ]; then
                WORKFLOW_STATUS="success"
                RECENT_SUCCESS=true
                echo "‚úÖ Found $SUCCESS_COUNT successful workflow run(s)"
                
                # Get the most recent successful run details
                LATEST_SUCCESS=$(echo "$RECENT_RUNS" | jq -r 'select(.conclusion == "success") | .created_at' | head -1)
                echo "Most recent success: $LATEST_SUCCESS"
              else
                # Check the status of the most recent run
                LATEST_STATUS=$(echo "$RECENT_RUNS" | jq -r '.conclusion // .status' | head -1)
                WORKFLOW_STATUS="$LATEST_STATUS"
                echo "Most recent run status: $WORKFLOW_STATUS"
              fi
            else
              echo "No recent workflow runs found (checked last 7 days)"
              WORKFLOW_STATUS="no_recent_runs"
            fi
          else
            echo "Could not find workflow in repository or workflow not yet registered"
            echo "This might happen if:"
            echo "1. The workflow file was just added and GitHub hasn't indexed it yet"
            echo "2. The workflow has never been triggered"
            echo "3. There's an issue with the workflow file"
            WORKFLOW_STATUS="not_indexed"
          fi
          
          echo "Final workflow_status: $WORKFLOW_STATUS"
          echo "workflow_status=$WORKFLOW_STATUS" >> $GITHUB_OUTPUT
          echo "recent_success=$RECENT_SUCCESS" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Install uv
        if: steps.check-results.outputs.workflow_status == 'success'
        uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        if: steps.check-results.outputs.workflow_status == 'success'
        run: | 
          uv pip install --system requests uuid

      - name: Generate secret code
        id: generate-code
        if: steps.check-results.outputs.workflow_status == 'success'
        run: |
          SECRET_CODE=$(python .github/workflows/scripts/generate_secret_code.py)
          echo "Generated Secret Code: $SECRET_CODE"
          echo "secret_code=$SECRET_CODE" >> $GITHUB_OUTPUT
        shell: bash

      # --- Comment on Pull Request (SUCCESS case) ---
      - name: Comment secret code on PR
        if: steps.check-results.outputs.workflow_status == 'success'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            üéâ **GitHub Action Successful!** üéâ

            Great job! Your GitHub Action ran successfully.

            Please copy the following secret code and provide it to your Coursera course to prove completion:

            ```
            ${{ steps.generate-code.outputs.secret_code }}
            ```

            Keep up the excellent work!
          comment-id: docker-build-secret-code
          update-existing: true

      # --- Comment on Pull Request (FAILURE case) ---
      - name: Comment on PR (Failure)
        # Fixed: Reference the correct step and output
        if: steps.check-results.outputs.workflow_status != 'success' && steps.check-location.outputs.correct_location == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ‚ö†Ô∏è **Learner Action Test Failed!** ‚ö†Ô∏è

            It looks like your GitHub Action test did not complete successfully.

            Please **review the Action logs for this workflow run** to identify and fix the issue. You can access the logs by clicking on the "Details" next to your failed test.

            Once you've resolved the problem, push your changes to this pull request, and the workflow will automatically re-run.

            Keep trying! You'll get it!
          comment-id: learner-action-secret-code-failure
          update-existing: true
