name: GHA Assignment Evaluation

on:
  pull_request:
    branches:
      - 'main'
    paths:
      - './ASSIGNMENT_2/ASSIGNMENT_2.yml'
      - '.github/workflows/ASSIGNMENT_2.yml'

jobs:
  docker-test:
    runs-on: ubuntu-latest
    container:
      image: python:3.9.23-slim

    steps:
      # Step 1: Checkout the files here.
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Dynamic Path Discovery for Learner's Action ---
      # This step determines if the learner's ASSIGNMENT_2.yml is in ./ASSIGNMENT_2/ or ./.github/workflows/
      - name: Determine Learner Action Path
        id: learner_action_path_check
        run: |
          ACTION_PATH=""
          if [ -f "./ASSIGNMENT_2/ASSIGNMENT_2.yml" ]; then
            ACTION_PATH="./ASSIGNMENT_2/ASSIGNMENT_2.yml"
          elif [ -f "./.github/workflows/ASSIGNMENT_2.yml" ]; then
            ACTION_PATH="./.github/workflows/ASSIGNMENT_2.yml"
          fi

          if [ -z "$ACTION_PATH" ]; then
            echo "Error: Learner's ASSIGNMENT_2.yml action not found in expected locations."
            exit 1
          fi
          echo "Found learner's action at: $ACTION_PATH"
          echo "action_path=$ACTION_PATH" >> $GITHUB_OUTPUT

      # --- Test Run the Learner's Action ---
      # This step executes the learner's GitHub Action (assuming it's a composite action or Docker action).
      # The `id: tested_learner_action` is crucial for checking its outcome later.
      - name: Test Run Learner's Assignment Action
        id: tested_learner_action # Give it a clear ID
        uses: ${{ steps.learner_action_path_check.outputs.action_path }}
        # Add any inputs your learner's action might expect, e.g.:
        # with:
        #   input_name: 'input_value'
        continue-on-error: true # Allow the workflow to proceed even if *their* action fails,
                                # so we can comment on the PR about the failure.

      # --- Check Learner Action Success and Proceed ---
      # All subsequent steps that depend on the learner's action's success should
      # explicitly check `steps.tested_learner_action.outcome == 'success'`.

      - name: Install uv
        # This step will only run if the learner's action (tested_learner_action) succeeded
        if: steps.tested_learner_action.outcome == 'success'
        uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        # This step will only run if the learner's action succeeded AND uv install succeeded
        if: steps.tested_learner_action.outcome == 'success' && success()
        run: |
          uv pip install --system requests uuid

      - name: Generate secret code
        id: generate-code
        # This step will only run if the learner's action succeeded AND dependencies installed
        if: steps.tested_learner_action.outcome == 'success' && success()
        run: |
          SECRET_CODE=$(python .github/workflows/scripts/generate_secret_code.py)
          echo "Generated Secret Code: $SECRET_CODE"
          echo "secret_code=$SECRET_CODE" >> $GITHUB_OUTPUT
        shell: bash

      # --- Comment on Pull Request (SUCCESS case) ---
      - name: Comment secret code on PR
        # This step runs ONLY if the learner's action was successful
        if: steps.tested_learner_action.outcome == 'success'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            üéâ **GitHub Action Successful!** üéâ

            Great job! Your GitHub Action ran successfully.

            Please copy the following secret code and provide it to your Coursera course to prove completion:

            ```
            ${{ steps.generate-code.outputs.secret_code }}
            ```

            Keep up the excellent work!
          comment-id: docker-build-secret-code
          update-existing: true

      # --- Comment on Pull Request (FAILURE case) ---
      - name: Comment on PR (Failure)
        # This step runs ONLY if the learner's action *failed* (or was cancelled/skipped)
        if: steps.tested_learner_action.outcome != 'success'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ‚ö†Ô∏è **Learner Action Test Failed!** ‚ö†Ô∏è

            It looks like your GitHub Action test did not complete successfully.

            Please **review the Action logs for this workflow run** to identify and fix the issue. You can access the logs by clicking on the "Details" next to your failed test.

            Once you've resolved the problem, push your changes to this pull request, and the workflow will automatically re-run.

            Keep trying! You'll get it!
          comment-id: learner-action-secret-code-failure # Unique ID for failure comment
          update-existing: true
