name: Docker Assignment Evaluation

on:
  pull_request:
    branches:
      - 'main'
    paths: [ 'ASSIGNMENT_1/docker/Dockerfile' ]
    
jobs:
  docker-test:
    runs-on: ubuntu-latest
    container:
      image: python:3.9.23-slim 

    steps:
      # Step 1: Checkout the files here. 
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Test build the docker image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Use the latest stable version

      - name: Build Docker image
        id: build-docker-image
        uses: docker/build-push-action@v5
        with:
          push: false
          context: ASSIGNMENT_1/docker
          file: ASSIGNMENT_1/docker/Dockerfile

      # Step 3: If the docker image builds succesfully then grab a code
      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install dependencies 
        run: | 
          uv pip install --system requests uuid

      - name: Generate secret code
        id: generate-code
        if: success() # Ensure this step only runs if the previous build step succeeded
        run: |
          # Execute the Python script. The script should print the secret code to stdout.
          # We capture this output and set it as a GitHub Actions step output.
          # The '>> $GITHUB_OUTPUT' part is crucial for making the variable
          # accessible to subsequent steps.
          SECRET_CODE=$(python .github/workflows/scripts/generate_secret_code.py)
          echo "Generated Secret Code: $SECRET_CODE"
          echo "secret_code=$SECRET_CODE" >> $GITHUB_OUTPUT
        shell: bash # Use bash to run the command and capture output

      # Step 4: Comment the secret code on the Pull Request
      # This step also only runs if the Docker build was successful.
      - name: Comment secret code on PR
        if: success() # Ensure this step only runs if the build was successful
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            üéâ **Dockerfile Build Successful!** üéâ
            
            Great job! Your Dockerfile built successfully.
            
            Please copy the following secret code and provide it to your Coursera course to prove completion:
            
            ```
            ${{ steps.generate-code.outputs.secret_code }}
            ```
            
            Keep up the excellent work!
          comment-id: docker-build-secret-code
          update-existing: true

      # --- Comment on Pull Request (FAILURE case) ---
      - name: Comment on PR (Failure)
        # Fixed: Reference the correct step and output
        if: steps.check-results.outputs.workflow_status != 'success' && steps.check-location.outputs.correct_location == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ‚ö†Ô∏è **Learner Action Test Failed!** ‚ö†Ô∏è
            It looks like your GitHub Action test did not complete successfully.
            Please **review the Action logs for this workflow run** to identify and fix the issue. You can access the logs by clicking on the "Details" next to your failed test.
            Once you've resolved the problem, push your changes to this pull request, and the workflow will automatically re-run.
            Keep trying! You'll get it!
          comment-id: learner-action-secret-code-failure
          update-existing: true
